generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model user_tb {
  userId       Int       @id @default(autoincrement())
  userName     String    @db.VarChar(100)
  userEmail    String    @db.VarChar(50)
  userPassword String    @db.VarChar(50)
  createdAt     DateTime  @default(now())

  chats        chat_tb[]
}

model chat_tb {
  chatId      Int       @id @default(autoincrement())
  userId      Int
  chatHeader  String    @db.NVarChar(50)
  createdAt    DateTime  @default(now())

  user        user_tb   @relation(fields: [userId], references: [userId])
  qnas        qNa_tb[]
}

model qNa_tb {
  qNaId     Int       @id @default(autoincrement())
  chatId    Int
  taskId    String    @db.Char(13)
  qNaWords  String    @db.NVarChar(MAX)
  qNaType   String    @db.Char(1)
  createdAt DateTime  @default(now())

  chat      chat_tb   @relation(fields: [chatId], references: [chatId])
}

model book_tb {
  bookId    Int           @id @default(autoincrement())
  bookName  String        @db.NVarChar(MAX)
  chapters  chapter_tb[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt @default(now())
}

model chapter_tb {
  chapterId   Int        @id @default(autoincrement())
  bookId      Int
  chapterName String     @db.NVarChar(50)
  chapterText String     @db.NVarChar(MAX)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt @default(now())

  book        book_tb    @relation(fields: [bookId], references: [bookId])
}

model embeddings_tb {
  id          Int      @id @default(autoincrement())
  embeddings  Bytes    // เก็บ numpy array เป็น binary
  metadata    Bytes    // เก็บ pickle docs
  updatedAt   DateTime @default(now())
}

model log_tb {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String   @db.NVarChar(MAX)
}